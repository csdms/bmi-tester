language: generic
os:
- linux
- osx
env:
  jobs:
  - PYTHON="3.8"
  - PYTHON="3.7"
  - PYTHON="3.6"
jobs:
  include:
  - stage: lint
    os: linux
    script:
    - pip install flake8
    - make lint

  - stage: docs
    os: linux
    install:
    - pip install -r requirements-docs.txt
    - pip install -e .
    script:
    - sphinx-apidoc --force -o docs/api bmi_tester *tests
    - make -C docs clean html

  - stage: deploy
    if: tag =~ v.*$
    script: skip
    os: linux
    deploy:
      on:
        all_branches: true
      provider: pypi
      username: mcflugen
      password:
        secure: Hs2d1XF71m6JzYIPFYq51hMmpV2x+fik6Q/0UN2yx+Me+rLGxSJEmw26q+3+rkg+bLsmHgdt88z+uuwqYEatRBwlK8zPMDew8cFe6cEJFqdECuABh5LxL3x+LsbXInvIzIlRkavIO6tdksbM6GU07koYA8C1p9ozrzUhhYxbVj5F3ULh0Bso8kGzokjLOXKTxhY7sXQoeNHn+McyG9PGXkH0Z2ZIRXWIJOZKrUAugAZRe+tXBsBXP6nu3XMsrymD9bxHMno5u7Y7/ZKOOzHiE6pyBZaLke/WX4frTShOMxAXGS6yziIvKK0tiYPAIi4MYDxLIrf1UVYk7qz5lxyd36R4gzXooluG+1EgbIWqD+xFQKeOQKwKUZB0byyI0LwiG/buvJSeJw3tIpoe61SYsJQfoUswq4SymqO+EAuTbne8dotTTtoJdaevZewCiowg32EOnHK74peoa492Q+lAXE/NsoDgJOMSJp4C9GMfTiv10QuQ2hHaccxevtuEriNiMlt3A+PARe5ctW+ZWDnamj4dh/kMG2N3oyyTghaaC7HXSP5YZDaTP0xF+eXp32oC76KmdxeB1UFTE60TQhK1PbYp7CwrwaZyoM45dmqGJ8Hc88W+YtyK2O3jA6t6dKWxLo2v3FskGUhHSrOZJNSG9zY7luH5Q6d2tU8drfmhY/g=

before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > $HOME/miniconda.sh
  else
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh > $HOME/miniconda.sh
  fi
- bash $HOME/miniconda.sh -b -p $(pwd)/anaconda
- export PATH="$(pwd)/anaconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda create -n _testing python=$PYTHON
- source activate _testing
- conda info -a && conda list
install:
- pip install -e .
# - conda install 'pymt>=1.1' -c conda-forge
script:
- pip install -r requirements-testing.txt
- pytest --cov=bmi_tester --cov-report=xml:$(pwd)/coverage.xml -vvv
after_success: coveralls
